name: CI

on:
  push:
    branches:
      - '*'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'master'

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Get an env
        uses: yetanalytics/actions/setup-env@v0


      - name: Cache Deps
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2
            ~/.gitlibs
          key: ${{ runner.os }}-deps-${{ hashFiles('deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Test Xapipe
        run: make test

  nvd_scan:
    uses: yetanalytics/actions/.github/workflows/nvd-scan.yml@e52cfb3d84df57bf7fb3bdb2ed87b8006c152610
    with:
      classpath-command: 'clojure -Spath -A:cli'

  docker:
    needs:
      - test
      - nvd_scan
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Get an env
        uses: yetanalytics/actions/setup-env@v0

      - name: Cache Deps
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2
            ~/.gitlibs
          key: ${{ runner.os }}-deps-${{ hashFiles('deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Build Xapipe
        run: make bundle BUNDLE_RUNTIMES=false

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: yetanalytics/xapipe
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_CI_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
