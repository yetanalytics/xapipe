expected: (= {:metrics-reporter "prometheus", :source-password "bar", :filter-pattern-profile-urls ["http://example.org/profile.jsonld"], :delete-job "foo", :filter-template-profile-urls ["http://example.org/profile.jsonld"], :source-backoff-max-attempt 1, :target-backoff-max-attempt 1, :source-username "foo", :json-file json-job, :job-id "foo", :conn-timeout 1, :statement-buffer-size 1, :filter-verb-ids ["http://example.org/profile.jsonld#verb"], :source-backoff-budget 1, :file-store-dir "somedir", :batch-buffer-size 1, :conn-io-thread-count 1, :get-params {:format "exact"}, :conn-threads 1, :filter-template-ids ["http://example.org/profile.jsonld#foo"], :filter-concept-types ["Verb"], :redis-uri "redis://0.0.0.0:1111", :source-url "http://0.0.0.0:8080/xapi", :filter-concept-profile-urls ["http://example.org/profile.jsonld"], :batch-timeout 1, :source-poll-interval 1, :source-batch-size 1, :filter-activity-type-ids ["http://example.org/profile.jsonld#activity-type"], :filter-ensure-paths [[["id"]]], :target-backoff-budget 1, :prometheus-push-gateway "localhost:1234", :conn-insecure? true, :target-username "foo", :target-backoff-j-range 1, :force-resume true, :redis-prefix "my-xapipe", :source-backoff-j-range 1, :storage :file, :get-buffer-size 1, :target-backoff-initial 1, :target-password "bar", :target-batch-size 1, :filter-attachment-usage-types ["http://example.org/profile.jsonld#aut"], :show-job true, :help true, :json json-job, :list-jobs true, :filter-match-paths [[[["verb"] ["id"]] "http://example.com/verb"] [[["actor"]] {"mbox" "mailto:bob@example.com", "objectType" "Agent"}]], :source-backoff-initial 1, :cleanup-buffer-size 1, :json-only false, :filter-pattern-ids ["http://example.org/profile.jsonld#foo"], :conn-default-per-route 1, :target-url "http://0.0.0.0:8081/xapi"} opts)
  actual: (not (= {:metrics-reporter "prometheus", :source-password "bar", :filter-pattern-profile-urls ["http://example.org/profile.jsonld"], :delete-job "foo", :filter-template-profile-urls ["http://example.org/profile.jsonld"], :source-backoff-max-attempt 1, :target-backoff-max-attempt 1, :source-username "foo", :json-file {:id "foo", :config {:get-buffer-size 10, :statement-buffer-size 500, :batch-buffer-size 10, :batch-timeout 200, :cleanup-buffer-size 50, :source {:request-config {:url-base "http://0.0.0.0:8080", :xapi-prefix "/xapi"}, :batch-size 50, :backoff-opts {:budget 10000, :max-attempt 10}, :poll-interval 1000, :get-params {:limit 50}}, :target {:request-config {:url-base "http://0.0.0.0:8081", :xapi-prefix "/xapi"}, :batch-size 50, :backoff-opts {:budget 10000, :max-attempt 10}}, :filter {}}, :state {:status :init, :cursor "1970-01-01T00:00:00.000000000Z", :source {:errors []}, :target {:errors []}, :errors [], :filter {}}}, :job-id "foo", :conn-timeout 1, :statement-buffer-size 1, :filter-verb-ids ["http://example.org/profile.jsonld#verb"], :source-backoff-budget 1, :file-store-dir "somedir", :batch-buffer-size 1, :conn-io-thread-count 1, :get-params {:format "exact"}, :conn-threads 1, :filter-template-ids ["http://example.org/profile.jsonld#foo"], :filter-concept-types ["Verb"], :redis-uri "redis://0.0.0.0:1111", :source-url "http://0.0.0.0:8080/xapi", :filter-concept-profile-urls ["http://example.org/profile.jsonld"], :batch-timeout 1, :source-poll-interval 1, :source-batch-size 1, :filter-activity-type-ids ["http://example.org/profile.jsonld#activity-type"], :filter-ensure-paths [[["id"]]], :target-backoff-budget 1, :prometheus-push-gateway "localhost:1234", :conn-insecure? true, :target-username "foo", :target-backoff-j-range 1, :force-resume true, :redis-prefix "my-xapipe", :source-backoff-j-range 1, :storage :file, :get-buffer-size 1, :target-backoff-initial 1, :target-password "bar", :target-batch-size 1, :filter-attachment-usage-types ["http://example.org/profile.jsonld#aut"], :show-job true, :help true, :json {:id "foo", :config {:get-buffer-size 10, :statement-buffer-size 500, :batch-buffer-size 10, :batch-timeout 200, :cleanup-buffer-size 50, :source {:request-config {:url-base "http://0.0.0.0:8080", :xapi-prefix "/xapi"}, :batch-size 50, :backoff-opts {:budget 10000, :max-attempt 10}, :poll-interval 1000, :get-params {:limit 50}}, :target {:request-config {:url-base "http://0.0.0.0:8081", :xapi-prefix "/xapi"}, :batch-size 50, :backoff-opts {:budget 10000, :max-attempt 10}}, :filter {}}, :state {:status :init, :cursor "1970-01-01T00:00:00.000000000Z", :source {:errors []}, :target {:errors []}, :errors [], :filter {}}}, :list-jobs true, :filter-match-paths [[[["verb"] ["id"]] "http://example.com/verb"] [[["actor"]] {"mbox" "mailto:bob@example.com", "objectType" "Agent"}]], :source-backoff-initial 1, :cleanup-buffer-size 1, :json-only false, :filter-pattern-ids ["http://example.org/profile.jsonld#foo"], :conn-default-per-route 1, :target-url "http://0.0.0.0:8081/xapi"} {:metrics-reporter "prometheus", :source-password "bar", :filter-pattern-profile-urls ["http://example.org/profile.jsonld"], :delete-job "foo", :filter-template-profile-urls ["http://example.org/profile.jsonld"], :source-backoff-max-attempt 1, :target-backoff-max-attempt 1, :source-username "foo", :json-file {:id "foo", :config {:get-buffer-size 10, :statement-buffer-size 500, :batch-buffer-size 10, :batch-timeout 200, :cleanup-buffer-size 50, :source {:request-config {:url-base "http://0.0.0.0:8080", :xapi-prefix "/xapi"}, :batch-size 50, :backoff-opts {:budget 10000, :max-attempt 10}, :poll-interval 1000, :get-params {:limit 50}}, :target {:request-config {:url-base "http://0.0.0.0:8081", :xapi-prefix "/xapi"}, :batch-size 50, :backoff-opts {:budget 10000, :max-attempt 10}}, :filter {}}, :state {:status :init, :cursor "1970-01-01T00:00:00.000000000Z", :source {:errors []}, :target {:errors []}, :errors [], :filter {}}}, :job-id "foo", :conn-timeout 1, :statement-buffer-size 1, :filter-verb-ids ["http://example.org/profile.jsonld#verb"], :source-backoff-budget 1, :file-store-dir "somedir", :batch-buffer-size 1, :conn-io-thread-count 1, :get-params {:format "exact"}, :conn-threads 1, :filter-template-ids ["http://example.org/profile.jsonld#foo"], :filter-concept-types ["Verb"], :redis-uri "redis://0.0.0.0:1111", :source-url "http://0.0.0.0:8080/xapi", :filter-concept-profile-urls ["http://example.org/profile.jsonld"], :batch-timeout 1, :source-poll-interval 1, :source-batch-size 1, :filter-activity-type-ids ["http://example.org/profile.jsonld#activity-type"], :filter-ensure-paths [[["id"]]], :target-backoff-budget 1, :prometheus-push-gateway "localhost:1234", :conn-insecure? true, :target-username "foo", :target-backoff-j-range 1, :force-resume true, :redis-prefix "my-xapipe", :source-backoff-j-range 1, :storage :file, :get-buffer-size 1, :target-backoff-initial 1, :target-password "bar", :target-batch-size 1, :filter-attachment-usage-types ["http://example.org/profile.jsonld#aut"], :show-job true, :help true, :json {:id "foo", :config {:get-buffer-size 10, :statement-buffer-size 500, :batch-buffer-size 10, :batch-timeout 200, :cleanup-buffer-size 50, :source {:request-config {:url-base "http://0.0.0.0:8080", :xapi-prefix "/xapi"}, :batch-size 50, :backoff-opts {:budget 10000, :max-attempt 10}, :poll-interval 1000, :get-params {:limit 50}}, :target {:request-config {:url-base "http://0.0.0.0:8081", :xapi-prefix "/xapi"}, :batch-size 50, :backoff-opts {:budget 10000, :max-attempt 10}}, :filter {}}, :state {:status :init, :cursor "1970-01-01T00:00:00.000000000Z", :source {:errors []}, :target {:errors []}, :errors [], :filter {}}}, :list-jobs true, :filter-match-paths [[[["verb"] ["id"]] "http://example.com/verb"] [[["actor"]] {"mbox" "mailto:bob@example.com", "objectType" "Agent"}]], :source-backoff-initial 1, :cleanup-buffer-size 1, :json-only true, :filter-pattern-ids ["http://example.org/profile.jsonld#foo"], :conn-default-per-route 1, :target-url "http://0.0.0.0:8081/xapi"}))